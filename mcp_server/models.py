# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T07:42:21+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field


class V1EstimateGetResponse(BaseModel):
    amount_from: Optional[float] = Field(None, examples=[3999.5])
    currency_from: Optional[str] = Field(None, examples=['usd'])
    currency_to: Optional[str] = Field(None, examples=['btc'])
    estimated_amount: Optional[float] = Field(None, examples=[0.17061637])


class V1MinAmountGetResponse(BaseModel):
    currency_from: Optional[str] = Field(None, examples=['eth'])
    currency_to: Optional[str] = Field(None, examples=['trx'])
    fiat_equivalent: Optional[float] = Field(None, examples=[35.40626584])
    min_amount: Optional[float] = Field(None, examples=[0.0078999])


class Datum(BaseModel):
    actually_paid: Optional[float] = Field(None, examples=[180])
    order_description: Optional[str] = Field(
        None, examples=['Apple Macbook Pro 2019 x 1']
    )
    order_id: Optional[str] = Field(None, examples=['RGDBP-21314'])
    outcome_amount: Optional[float] = Field(None, examples=[178.9005])
    outcome_currency: Optional[str] = Field(None, examples=['trx'])
    pay_address: Optional[str] = Field(
        None, examples=['TNDFkiSmBQorNFacb3735q8MnT29sn8BLn']
    )
    pay_amount: Optional[float] = Field(None, examples=[165.652609])
    pay_currency: Optional[str] = Field(None, examples=['trx'])
    payment_id: Optional[float] = Field(None, examples=[5524759814])
    payment_status: Optional[str] = Field(None, examples=['finished'])
    price_amount: Optional[float] = Field(None, examples=[5])
    price_currency: Optional[str] = Field(None, examples=['usd'])
    purchase_id: Optional[str] = Field(None, examples=['4944856743'])


class V1PaymentGetResponse(BaseModel):
    data: Optional[List[Datum]] = Field(
        None,
        examples=[
            [
                {
                    'actually_paid': 180,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 178.9005,
                    'outcome_currency': 'trx',
                    'pay_address': 'TNDFkiSmBQorNFacb3735q8MnT29sn8BLn',
                    'pay_amount': 165.652609,
                    'pay_currency': 'trx',
                    'payment_id': 5524759814,
                    'payment_status': 'finished',
                    'price_amount': 5,
                    'price_currency': 'usd',
                    'purchase_id': '4944856743',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 164.6248468,
                    'outcome_currency': 'trx',
                    'pay_address': 'TVKHbLc47BnMbdE7QN4X5Q1FtyZLGGiTo8',
                    'pay_amount': 165.652609,
                    'pay_currency': 'trx',
                    'payment_id': 5867063509,
                    'payment_status': 'expired',
                    'price_amount': 5,
                    'price_currency': 'usd',
                    'purchase_id': '5057851130',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 0.1687052,
                    'outcome_currency': 'btc',
                    'pay_address': '3EZ2uTdVDAMFXTfc6uLDDKR6o8qKBZXVkj',
                    'pay_amount': 0.17070286,
                    'pay_currency': 'btc',
                    'payment_id': 5745459419,
                    'payment_status': 'waiting',
                    'price_amount': 3999.5,
                    'price_currency': 'usd',
                    'purchase_id': '5837122679',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 0.8019402,
                    'outcome_currency': 'btc',
                    'pay_address': '394UZCUdx3NN8VDsCZW8c6AzP7cXEXA8Xq',
                    'pay_amount': 0.8102725,
                    'pay_currency': 'btc',
                    'payment_id': 4650948408,
                    'payment_status': 'waiting',
                    'price_amount': 3999.5,
                    'price_currency': 'usd',
                    'purchase_id': '5094859409',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 988.9016296,
                    'outcome_currency': 'bcd',
                    'pay_address': '3EWJaZBaRWbPjSBTpgFcvxpnXLJzFDCHqW',
                    'pay_amount': 993.87178656,
                    'pay_currency': 'bcd',
                    'payment_id': 5605634688,
                    'payment_status': 'expired',
                    'price_amount': 500,
                    'price_currency': 'usd',
                    'purchase_id': '5817305007',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 1.8451261,
                    'outcome_currency': 'bch',
                    'pay_address': 'qzkshdh94vhdcyuejjf8ltcy2cl246hw0c68t36z69',
                    'pay_amount': 1.85459941,
                    'pay_currency': 'bch',
                    'payment_id': 5241856814,
                    'payment_status': 'expired',
                    'price_amount': 500,
                    'price_currency': 'usd',
                    'purchase_id': '5941190675',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 56.151958,
                    'outcome_currency': 'btg',
                    'pay_address': 'AYyecr8WKVpj2PNonjyUpn9sCHFyFMLdN1',
                    'pay_amount': 56.4344495,
                    'pay_currency': 'btg',
                    'payment_id': 5751462089,
                    'payment_status': 'expired',
                    'price_amount': 500,
                    'price_currency': 'usd',
                    'purchase_id': '6229667127',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 489.9433465,
                    'outcome_currency': 'dai',
                    'pay_address': '0x6C3E920D0fdAF45c75b6c00f25Aa6a58429d4efB',
                    'pay_amount': 496.84604252,
                    'pay_currency': 'dai',
                    'payment_id': 6100223670,
                    'payment_status': 'expired',
                    'price_amount': 500,
                    'price_currency': 'usd',
                    'purchase_id': '5376931412',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 0.025819,
                    'outcome_currency': 'btc',
                    'pay_address': '3C85TUuBKEkoZZsTawiJhYZtVVLgE4GWqj',
                    'pay_amount': 0.02596608,
                    'pay_currency': 'btc',
                    'payment_id': 4460859238,
                    'payment_status': 'expired',
                    'price_amount': 500,
                    'price_currency': 'usd',
                    'purchase_id': '5652098489',
                },
                {
                    'actually_paid': 0,
                    'order_description': 'Apple Macbook Pro 2019 x 1',
                    'order_id': 'RGDBP-21314',
                    'outcome_amount': 153789.0997188,
                    'outcome_currency': 'doge',
                    'pay_address': 'DLmK6vLURgHoWVZrQztthSqV71CBePG5k5',
                    'pay_amount': 154569.92936569,
                    'pay_currency': 'doge',
                    'payment_id': 4948632928,
                    'payment_status': 'expired',
                    'price_amount': 500,
                    'price_currency': 'usd',
                    'purchase_id': '4811984625',
                },
            ]
        ],
    )
    limit: Optional[float] = Field(None, examples=[10])
    page: Optional[float] = Field(None, examples=[0])
    pagesCount: Optional[float] = Field(None, examples=[6])
    total: Optional[float] = Field(None, examples=[59])


class V1PaymentIdUpdateMerchantEstimatePostResponse(BaseModel):
    expiration_estimate_date: Optional[str] = Field(
        None, examples=['2022-08-12T13:14:28.536Z']
    )
    id: Optional[str] = Field(None, examples=['4455667788'])
    pay_amount: Optional[float] = Field(None, examples=[0.04671013])
    token_id: Optional[str] = Field(None, examples=['5566778899'])


class V1PaymentPaymentIdGetResponse(BaseModel):
    actually_paid: Optional[float] = Field(None, examples=[180])
    created_at: Optional[str] = Field(None, examples=['2020-12-16T14:30:43.306Z'])
    order_description: Optional[str] = Field(
        None, examples=['Apple Macbook Pro 2019 x 1']
    )
    order_id: Optional[str] = Field(None, examples=['RGDBP-21314'])
    outcome_amount: Optional[float] = Field(None, examples=[178.9005])
    outcome_currency: Optional[str] = Field(None, examples=['trx'])
    pay_address: Optional[str] = Field(
        None, examples=['TNDFkiSmBQorNFacb3735q8MnT29sn8BLn']
    )
    pay_amount: Optional[float] = Field(None, examples=[165.652609])
    pay_currency: Optional[str] = Field(None, examples=['trx'])
    payment_id: Optional[float] = Field(None, examples=[5524759814])
    payment_status: Optional[str] = Field(None, examples=['finished'])
    price_amount: Optional[float] = Field(None, examples=[5])
    price_currency: Optional[str] = Field(None, examples=['usd'])
    purchase_id: Optional[str] = Field(None, examples=['4944856743'])
    updated_at: Optional[str] = Field(None, examples=['2020-12-16T14:40:46.523Z'])


class V1PayoutWithdrawalsIdVerifyPostRequest(BaseModel):
    verification_code: Optional[str] = Field(None, examples=['123456'])


class Usddtrc20(BaseModel):
    amount: Optional[float] = Field(None, examples=[0.7])
    pendingAmount: Optional[float] = Field(None, examples=[0])


class Usdtbsc(BaseModel):
    amount: Optional[float] = Field(None, examples=[1.0001341847350678])
    pendingAmount: Optional[float] = Field(None, examples=[0])


class Balances(BaseModel):
    usddtrc20: Optional[Usddtrc20] = None
    usdtbsc: Optional[Usdtbsc] = None


class Result(BaseModel):
    balances: Optional[Balances] = None
    subPartnerId: Optional[str] = Field(None, examples=['111394288'])


class V1SubPartnerBalanceIdGetResponse(BaseModel):
    result: Optional[Result] = None


class Result1(BaseModel):
    amount: Optional[str] = Field(None, examples=['1'])
    created_at: Optional[str] = Field(None, examples=['2022-10-09T22:09:02.181Z'])
    currency: Optional[str] = Field(None, examples=['usdtbsc'])
    from_sub_id: Optional[str] = Field(None, examples=['111394288'])
    id: Optional[str] = Field(None, examples=['327209161'])
    status: Optional[str] = Field(None, examples=['FINISHED'])
    to_sub_id: Optional[str] = Field(None, examples=['1515573197'])
    updated_at: Optional[str] = Field(None, examples=['2022-10-09T22:10:01.853Z'])


class V1SubPartnerTransferIdGetResponse(BaseModel):
    result: Optional[Result1] = None


class ResultItem(BaseModel):
    amount: Optional[str] = Field(None, examples=['1'])
    created_at: Optional[str] = Field(None, examples=['2022-10-09T18:53:21.975Z'])
    currency: Optional[str] = Field(None, examples=['usdtbsc'])
    from_sub_id: Optional[str] = Field(None, examples=['5209391548'])
    id: Optional[str] = Field(None, examples=['111394288'])
    status: Optional[str] = Field(None, examples=['FINISHED'])
    to_sub_id: Optional[str] = Field(None, examples=['111394288'])
    updated_at: Optional[str] = Field(None, examples=['2022-10-09T18:55:00.696Z'])


class V1SubPartnerTransfersGetResponse(BaseModel):
    count: Optional[float] = Field(None, examples=[7])
    result: Optional[List[ResultItem]] = Field(
        None,
        examples=[
            [
                {
                    'amount': '1',
                    'created_at': '2022-10-09T18:53:21.975Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '5209391548',
                    'id': '111394288',
                    'status': 'FINISHED',
                    'to_sub_id': '111394288',
                    'updated_at': '2022-10-09T18:55:00.696Z',
                },
                {
                    'amount': '1',
                    'created_at': '2022-10-09T19:08:32.440Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '111394288',
                    'id': '148427051',
                    'status': 'FINISHED',
                    'to_sub_id': '5209391548',
                    'updated_at': '2022-10-09T19:10:01.209Z',
                },
                {
                    'amount': '2',
                    'created_at': '2022-10-09T21:19:51.936Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '5209391548',
                    'id': '1631380403',
                    'status': 'FINISHED',
                    'to_sub_id': '111394288',
                    'updated_at': '2022-10-09T21:21:00.671Z',
                },
                {
                    'amount': '2',
                    'created_at': '2022-10-09T21:22:17.125Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '5209391548',
                    'id': '1167886259',
                    'status': 'FINISHED',
                    'to_sub_id': '111394288',
                    'updated_at': '2022-10-09T21:24:00.662Z',
                },
                {
                    'amount': '1',
                    'created_at': '2022-10-09T21:25:29.231Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '111394288',
                    'id': '48471014',
                    'status': 'FINISHED',
                    'to_sub_id': '5209391548',
                    'updated_at': '2022-10-09T21:27:00.676Z',
                },
                {
                    'amount': '1',
                    'created_at': '2022-10-09T21:54:57.713Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '111394288',
                    'id': '1304149238',
                    'status': 'FINISHED',
                    'to_sub_id': '5209391548',
                    'updated_at': '2022-10-09T21:56:01.056Z',
                },
                {
                    'amount': '1',
                    'created_at': '2022-10-09T22:09:02.181Z',
                    'currency': 'usdtbsc',
                    'from_sub_id': '111394288',
                    'id': '327209161',
                    'status': 'FINISHED',
                    'to_sub_id': '1515573197',
                    'updated_at': '2022-10-09T22:10:01.853Z',
                },
            ]
        ],
    )


class Subscriber(BaseModel):
    email: Optional[str] = Field(None, examples=['mikhail.s@changenow.io'])
    sub_partner_id: Optional[str] = Field(None, examples=['111394288'])


class ResultItem1(BaseModel):
    created_at: Optional[str] = Field(None, examples=['2022-10-09T22:15:50.808Z'])
    expire_date: Optional[str] = Field(None, examples=['2022-10-11T00:02:00.025Z'])
    id: Optional[str] = Field(None, examples=['1515573197'])
    is_active: Optional[bool] = Field(None, examples=[True])
    status: Optional[str] = Field(None, examples=['PAID'])
    subscriber: Optional[Subscriber] = None
    subscription_plan_id: Optional[str] = Field(None, examples=['111394288'])
    updated_at: Optional[str] = Field(None, examples=['2022-10-09T22:15:50.808Z'])


class V1SubscriptionsGetResponse(BaseModel):
    count: Optional[float] = Field(None, examples=[2])
    result: Optional[List[ResultItem1]] = Field(
        None,
        examples=[
            [
                {
                    'created_at': '2022-10-09T22:15:50.808Z',
                    'expire_date': '2022-10-11T00:02:00.025Z',
                    'id': '1515573197',
                    'is_active': True,
                    'status': 'PAID',
                    'subscriber': {'sub_partner_id': '111394288'},
                    'subscription_plan_id': '111394288',
                    'updated_at': '2022-10-09T22:15:50.808Z',
                },
                {
                    'created_at': '2022-10-06T16:40:28.880Z',
                    'expire_date': '2022-10-07T16:46:00.910Z',
                    'id': '111394288',
                    'is_active': False,
                    'status': 'WAITING_PAY',
                    'subscriber': {'email': 'mikhail.s@changenow.io'},
                    'subscription_plan_id': '111394288',
                    'updated_at': '2022-10-06T16:40:28.880Z',
                },
            ]
        ],
    )


class ResultItem2(BaseModel):
    amount: Optional[float] = Field(None, examples=[0.1])
    cancel_url: Optional[Any] = Field(None, examples=[None])
    created_at: Optional[str] = Field(None, examples=['2022-10-04T16:10:06.214Z'])
    currency: Optional[str] = Field(None, examples=['USD'])
    id: Optional[str] = Field(None, examples=['76215585'])
    interval_day: Optional[str] = Field(None, examples=['3'])
    ipn_callback_url: Optional[Any] = Field(None, examples=[None])
    partially_paid_url: Optional[Any] = Field(None, examples=[None])
    success_url: Optional[Any] = Field(None, examples=[None])
    title: Optional[str] = Field(None, examples=['second sub plan'])
    updated_at: Optional[str] = Field(None, examples=['2022-10-04T16:10:06.214Z'])


class V1SubscriptionsPlansGetResponse(BaseModel):
    count: Optional[float] = Field(None, examples=[2])
    result: Optional[List[ResultItem2]] = Field(
        None,
        examples=[
            [
                {
                    'amount': 0.1,
                    'cancel_url': None,
                    'created_at': '2022-10-04T16:10:06.214Z',
                    'currency': 'USD',
                    'id': '76215585',
                    'interval_day': '3',
                    'ipn_callback_url': None,
                    'partially_paid_url': None,
                    'success_url': None,
                    'title': 'second sub plan',
                    'updated_at': '2022-10-04T16:10:06.214Z',
                },
                {
                    'amount': 0.5,
                    'cancel_url': None,
                    'created_at': '2022-10-04T16:28:55.423Z',
                    'currency': 'USD',
                    'id': '1062307590',
                    'interval_day': '1',
                    'ipn_callback_url': None,
                    'partially_paid_url': None,
                    'success_url': None,
                    'title': 'second sub plan',
                    'updated_at': '2022-10-04T16:28:55.423Z',
                },
            ]
        ],
    )


class Result2(BaseModel):
    amount: Optional[float] = Field(None, examples=[2])
    cancel_url: Optional[Any] = Field(None, examples=[None])
    created_at: Optional[str] = Field(None, examples=['2022-10-04T16:10:06.214Z'])
    currency: Optional[str] = Field(None, examples=['USD'])
    id: Optional[str] = Field(None, examples=['76215585'])
    interval_day: Optional[str] = Field(None, examples=['1'])
    ipn_callback_url: Optional[Any] = Field(None, examples=[None])
    partially_paid_url: Optional[Any] = Field(None, examples=[None])
    success_url: Optional[Any] = Field(None, examples=[None])
    title: Optional[str] = Field(None, examples=['test plan'])
    updated_at: Optional[str] = Field(None, examples=['2022-10-04T16:10:06.214Z'])


class V1SubscriptionsPlansPlanIdGetResponse(BaseModel):
    result: Optional[Result2] = None


class V1SubscriptionsPlansPlanIdGetResponse1(BaseModel):
    code: Optional[str] = Field(None, examples=['NOT_FOUND'])
    message: Optional[str] = Field(None, examples=['subscription plan not found'])
    status: Optional[bool] = Field(None, examples=[False])
    statusCode: Optional[float] = Field(None, examples=[404])


class V1SubscriptionsPlansPlanIdPatchRequest(BaseModel):
    amount: Optional[float] = Field(None, examples=[2])
    currency: Optional[str] = Field(None, examples=['usd'])
    interval_day: Optional[float] = Field(None, examples=[1])
    title: Optional[str] = Field(None, examples=['test plan'])


class V1SubscriptionsSubIdDeleteResponse(BaseModel):
    result: Optional[str] = Field(None, examples=['ok'])


class V1SubscriptionsSubIdDeleteResponse1(BaseModel):
    code: Optional[str] = Field(None, examples=['NOT_FOUND'])
    message: Optional[str] = Field(None, examples=['subscription not found'])
    status: Optional[bool] = Field(None, examples=[False])
    statusCode: Optional[float] = Field(None, examples=[404])


class Subscriber1(BaseModel):
    sub_partner_id: Optional[str] = Field(None, examples=['111394288'])


class Result3(BaseModel):
    created_at: Optional[str] = Field(None, examples=['2022-10-09T22:15:50.808Z'])
    expire_date: Optional[str] = Field(None, examples=['2022-10-12T00:02:00.025Z'])
    id: Optional[str] = Field(None, examples=['1515573197'])
    is_active: Optional[bool] = Field(None, examples=[True])
    status: Optional[str] = Field(None, examples=['PAID'])
    subscriber: Optional[Subscriber1] = None
    subscription_plan_id: Optional[str] = Field(None, examples=['111394288'])
    updated_at: Optional[str] = Field(None, examples=['2022-10-09T22:15:50.808Z'])


class V1SubscriptionsSubIdGetResponse(BaseModel):
    result: Optional[Result3] = None


class V1SubscriptionsSubIdGetResponse1(BaseModel):
    code: Optional[str] = Field(None, examples=['NOT_FOUND'])
    message: Optional[str] = Field(None, examples=['subscription not found'])
    status: Optional[bool] = Field(None, examples=[False])
    statusCode: Optional[float] = Field(None, examples=[404])
